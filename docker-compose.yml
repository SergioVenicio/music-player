version: "3.3"

services:
  web:
    build: .
    volumes:
      - .:/code
      - media_data:/var/www/music_player/media
    env_file:
      - ./.env
    environment:
      - DEBUG=${DEBUG}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
      - AWS_ACCESS_KEY_ID=={AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY_ID={AWS_SECRET_ACCESS_KEY_ID}
      - AWS_STORAGE_BUCKET_NAME={AWS_STORAGE_BUCKET_NAME}
      - POSTGRES_HOST=${PSQL_HOST}
      - POSTGRES_DB=${PSQL_DB}
      - POSTGRES_USER=${PSQL_USER}
      - POSTGRES_PASSWORD=${PSQL_PWD}
    links:
      - db
      - redis
    expose:
      - 8000
    depends_on:
      - db
      - redis
    command: gunicorn -w 1 music_player.wsgi:application -b 0.0.0.0:8000
    restart: always
  db:
    image: postgres:latest
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_DB=${PSQL_DB}
      - POSTGRES_USER=${PSQL_USER}
      - POSTGRES_PASSWORD=${PSQL_PWD}
    ports:
      - "5432:5432"
    expose:
      - 5432
    restart: always

  redis:
    image: "redis:alpine"
    command: redis-server --requirepass ${REDIS_PWD}
    ports:
      - "6379:6379"
    expose:
      - 6379
    volumes:
      - redis_data:/var/lib/redis

  nginx:
    build: ./nginx
    volumes:
      - media_data:/var/www/music_player/media
      - ./front-end:/var/www/frontend
    ports:
      - 80:80
      - 8000:8000
    links:
      - web
    restart: always

volumes:
  postgres_data:
  media_data:
  redis_data:
